import java.util.*;

public class StudentApp {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        StudentDAO dao = new StudentDAO();

        while (true) {
            System.out.println("\n1. Add Student");
            System.out.println("2. View All Students");
            System.out.println("3. Update Student");
            System.out.println("4. Delete Student");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");
            int ch = sc.nextInt();

            switch (ch) {
                case 1:
                    System.out.print("Enter ID: ");
                    int id = sc.nextInt();
                    sc.nextLine();
                    System.out.print("Enter Name: ");
                    String name = sc.nextLine();
                    System.out.print("Enter Department: ");
                    String dept = sc.nextLine();
                    System.out.print("Enter Marks: ");
                    double marks = sc.nextDouble();
                    if (dao.addStudent(new Student(id, name, dept, marks)))
                        System.out.println("Student added.");
                    else System.out.println("Failed to add student.");
                    break;

                case 2:
                    List<Student> list = dao.getAllStudents();
                    if (list.isEmpty()) System.out.println("No records found.");
                    else for (Student s : list)
                        System.out.println(s.getStudentID() + " | " + s.getName() + " | " + s.getDepartment() + " | " + s.getMarks());
                    break;

                case 3:
                    System.out.print("Enter ID to update: ");
                    int uid = sc.nextInt();
                    sc.nextLine();
                    System.out.print("Enter new Name: ");
                    String uname = sc.nextLine();
                    System.out.print("Enter new Department: ");
                    String udept = sc.nextLine();
                    System.out.print("Enter new Marks: ");
                    double umarks = sc.nextDouble();
                    if (dao.updateStudent(new Student(uid, uname, udept, umarks)))
                        System.out.println("Student updated.");
                    else System.out.println("Update failed.");
                    break;

                case 4:
                    System.out.print("Enter ID to delete: ");
                    int did = sc.nextInt();
                    if (dao.deleteStudent(did))
                        System.out.println("Student deleted.");
                    else System.out.println("Delete failed.");
                    break;

                case 5:
                    System.out.println("Exiting...");
                    sc.close();
                    return;

                default:
                    System.out.println("Invalid choice.");
            }
        }
    }
}
